#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# Description: Build Kernel using GitHub Actions
# Change from P3TERX
# Based on: https://github.com/ylx2016/kernel/blob/master/.github/workflows/Debian_kernel_latest.yml
#

name: Make Venus Kernel

on:
  workflow_dispatch:
    inputs:
      configFile:
        description: 'Kernel Config'     
        required: true
        default: 'vendor/venus-Docker_defconfig'
      makeCommand:
        description: 'Kernel make Command'     
        required: true
        default: '-j$(nproc --all) O=out CC=\"ccache clang\" ARCH=arm64 LLVM=y LLVM_PATH=/workdir/clang/bin/ CROSS_COMPILE_ARM32=arm-linux-gnueabi- CLANG_TRIPLE=aarch64-linux-gnu- CROSS_COMPILE=aarch64-linux-gnu- export KBUILD_BUILD_USER=\"github\" KBUILD_BUILD_HOST=\"github.com\"'

env:
  UPLOAD_DIR: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    container: docker.io/qctt/kernelbuild:debian12
    
    steps:
    - name: Checkout
      uses: actions/checkout@main
      with:
#        submodules: 'recursive'
        fetch-depth: 0
        
    - name: Get WeebX Clang
      id: clang
      working-directory: /workdir
      if: (!cancelled()) && success()
      run: |
        apt update
        apt install -y ccache
        ccache -M 10
        wget "$(curl -s https://raw.githubusercontent.com/XSans0/WeebX-Clang/main/16.0.0/link.txt)" -O "weebx-clang.tar.gz"
        mkdir clang && tar -xf weebx-clang.tar.gz -C clang && rm -rf weebx clang.tar.gz
        export PATH="/workdir/clang/bin:$PATH"
        echo $PATH >> $GITHUB_PATH
        
#    - name: Get Prelude Clang
#      id: clang
#      working-directory: /workdir
#      run: |
#        git clone --recursive --depth 1 https://gitlab.com/jjpprrrr/prelude-clang.git clang
#        export PATH="/workdir/clang/bin:$PATH"
#        echo $PATH >> $GITHUB_PATH
    
    - name: Get source code
      id: code
      working-directory: /workdir
      if: (!cancelled()) && success()
      run: |
        git clone --recursive --depth 1 https://github.com/wwlwwlwwlwwl/kernel_xiaomi_venus.git kernel
        
    - name: Get Anykernel
      id: anykernel
      working-directory: /workdir
      if: (!cancelled()) && success()
      run: |
        git clone --recursive --depth 1 https://github.com/wwlwwlwwlwwl/AnyKernel3.git AnyKernel
         
    - name: Compile the kernel
      id: compile
      if: (!cancelled()) && success()
      working-directory: /workdir
      run: |
        df -hT $PWD
        export CLANG_CMDLINE="${{ github.event.inputs.makeCommand }}"
        cd kernel
        echo "=====Compile Start====="
        echo "Configure kernel config"
        make $CLANG_CMDLINE ${{ github.event.inputs.configFile }}
        echo "Start compile with cmdline: $CLANG_CMDLINE"
        make $CLANG_CMDLINE
        echo "=====Compile End====="
        ccache -s
    
    - name: Package kernel with AnyKernel
      id: package
      if: (!cancelled()) && success()
      working-directory: /workdir/kernel/out
      run: |
        cp -v arch/arm64/boot/Image /workdir/AnyKernel
        cp -v $(cat modules.order) /workdir/AnyKernel/modules/system/lib/modules       
    
    - name: Upload
      uses: actions/upload-artifact@main
      if: (!cancelled()) && success() && env.UPLOAD_DIR == 'true'
      with:
        name: AnyKernel
        path: /workdir/AnyKernel
    
    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 10
